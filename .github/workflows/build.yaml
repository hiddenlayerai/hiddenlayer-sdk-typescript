name: Node CI

on:
    pull_request: {}
    push:
        branches:
            - main

permissions:
  contents: read

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                node-version: [18.x, 20.x]
        steps:
            - name: Harden Runner
              uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
              with:
                egress-policy: audit

            - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Install modules
              run: npm install --legacy-peer-deps

            - name: Cache node modules
              uses: actions/cache@3624ceb22c1c5a301c8db4169662070a689d9ea8 # v4.1.1
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm
                  # This uses the same name as the build-action so we can share the caches.
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-
            - name: Lint code
              run: npm run lint
            - name: Login to Quay
              uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
              with:
                registry: quay.io
                username: ${{ vars.QUAY_USERNAME }}
                password: ${{ secrets.QUAY_TOKEN }}
            - name: Start Enterprise Model Scanner
              run: docker compose -f integration-tests/enterprise-modscan/docker-compose.yaml up -d
            - name: Run tests
              run: npm run test
              env:
                  HL_CLIENT_ID: ${{ secrets.HL_CLIENT_ID}}
                  HL_CLIENT_SECRET: ${{ secrets.HL_CLIENT_SECRET}}
            - name: Stop Enterprise Model Scanner
              if: always()
              run: docker compose -f integration-tests/enterprise-modscan/docker-compose.yaml down

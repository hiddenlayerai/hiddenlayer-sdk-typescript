/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArtifactContent } from './ArtifactContent';
import {
    ArtifactContentFromJSON,
    ArtifactContentFromJSONTyped,
    ArtifactContentToJSON,
} from './ArtifactContent';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';
import type { ArtifactLocation } from './ArtifactLocation';
import {
    ArtifactLocationFromJSON,
    ArtifactLocationFromJSONTyped,
    ArtifactLocationToJSON,
} from './ArtifactLocation';

/**
 * A single artifact. In some cases, this artifact might be nested within another artifact.
 * @export
 * @interface Artifact
 */
export interface Artifact {
    /**
     * 
     * @type {Message}
     * @memberof Artifact
     */
    description?: Message;
    /**
     * 
     * @type {ArtifactLocation}
     * @memberof Artifact
     */
    location?: ArtifactLocation;
    /**
     * Identifies the index of the immediate parent of the artifact, if this artifact is nested.
     * @type {number}
     * @memberof Artifact
     */
    parentIndex?: number;
    /**
     * The offset in bytes of the artifact within its containing artifact.
     * @type {number}
     * @memberof Artifact
     */
    offset?: number;
    /**
     * The length of the artifact in bytes.
     * @type {number}
     * @memberof Artifact
     */
    length?: number;
    /**
     * The role or roles played by the artifact in the analysis.
     * @type {Set<string>}
     * @memberof Artifact
     */
    roles?: Set<ArtifactRolesEnum>;
    /**
     * The MIME type (RFC 2045) of the artifact.
     * @type {string}
     * @memberof Artifact
     */
    mimeType?: string;
    /**
     * 
     * @type {ArtifactContent}
     * @memberof Artifact
     */
    contents?: ArtifactContent;
    /**
     * Specifies the encoding for an artifact object that refers to a text file.
     * @type {string}
     * @memberof Artifact
     */
    encoding?: string;
    /**
     * Specifies the source language for any artifact object that refers to a text file that contains source code.
     * @type {string}
     * @memberof Artifact
     */
    sourceLanguage?: string;
    /**
     * A dictionary, each of whose keys is the name of a hash function and each of whose values is the hashed value of the artifact produced by the specified hash function.
     * @type {{ [key: string]: string; }}
     * @memberof Artifact
     */
    hashes?: { [key: string]: string; };
    /**
     * The Coordinated Universal Time (UTC) date and time at which the artifact was most recently modified. See "Date/time properties" in the SARIF spec for the required format.
     * @type {Date}
     * @memberof Artifact
     */
    lastModifiedTimeUtc?: Date;
    /**
     * 
     * @type {PropertyBag}
     * @memberof Artifact
     */
    properties?: PropertyBag;
}


/**
 * @export
 */
export const ArtifactRolesEnum = {
    AnalysisTarget: 'analysisTarget',
    Attachment: 'attachment',
    ResponseFile: 'responseFile',
    ResultFile: 'resultFile',
    StandardStream: 'standardStream',
    TracedFile: 'tracedFile',
    Unmodified: 'unmodified',
    Modified: 'modified',
    Added: 'added',
    Deleted: 'deleted',
    Renamed: 'renamed',
    Uncontrolled: 'uncontrolled',
    Driver: 'driver',
    Extension: 'extension',
    Translation: 'translation',
    Taxonomy: 'taxonomy',
    Policy: 'policy',
    ReferencedOnCommandLine: 'referencedOnCommandLine',
    MemoryContents: 'memoryContents',
    Directory: 'directory',
    UserSpecifiedConfiguration: 'userSpecifiedConfiguration',
    ToolSpecifiedConfiguration: 'toolSpecifiedConfiguration',
    DebugOutputFile: 'debugOutputFile',
    UnknownDefaultOpenApi: '11184809'
} as const;
export type ArtifactRolesEnum = typeof ArtifactRolesEnum[keyof typeof ArtifactRolesEnum];


/**
 * Check if a given object implements the Artifact interface.
 */
export function instanceOfArtifact(value: object): value is Artifact {
    return true;
}

export function ArtifactFromJSON(json: any): Artifact {
    return ArtifactFromJSONTyped(json, false);
}

export function ArtifactFromJSONTyped(json: any, ignoreDiscriminator: boolean): Artifact {
    if (json == null) {
        return json;
    }
    return {
        
        'description': json['description'] == null ? undefined : MessageFromJSON(json['description']),
        'location': json['location'] == null ? undefined : ArtifactLocationFromJSON(json['location']),
        'parentIndex': json['parentIndex'] == null ? undefined : json['parentIndex'],
        'offset': json['offset'] == null ? undefined : json['offset'],
        'length': json['length'] == null ? undefined : json['length'],
        'roles': json['roles'] == null ? undefined : json['roles'],
        'mimeType': json['mimeType'] == null ? undefined : json['mimeType'],
        'contents': json['contents'] == null ? undefined : ArtifactContentFromJSON(json['contents']),
        'encoding': json['encoding'] == null ? undefined : json['encoding'],
        'sourceLanguage': json['sourceLanguage'] == null ? undefined : json['sourceLanguage'],
        'hashes': json['hashes'] == null ? undefined : json['hashes'],
        'lastModifiedTimeUtc': json['lastModifiedTimeUtc'] == null ? undefined : (new Date(json['lastModifiedTimeUtc'])),
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function ArtifactToJSON(value?: Artifact | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'description': MessageToJSON(value['description']),
        'location': ArtifactLocationToJSON(value['location']),
        'parentIndex': value['parentIndex'],
        'offset': value['offset'],
        'length': value['length'],
        'roles': value['roles'] == null ? undefined : Array.from(value['roles'] as Set<any>),
        'mimeType': value['mimeType'],
        'contents': ArtifactContentToJSON(value['contents']),
        'encoding': value['encoding'],
        'sourceLanguage': value['sourceLanguage'],
        'hashes': value['hashes'],
        'lastModifiedTimeUtc': value['lastModifiedTimeUtc'] == null ? undefined : ((value['lastModifiedTimeUtc']).toISOString()),
        'properties': PropertyBagToJSON(value['properties']),
    };
}


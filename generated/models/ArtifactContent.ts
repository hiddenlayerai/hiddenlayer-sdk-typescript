/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';
import type { MultiformatMessageString } from './MultiformatMessageString';
import {
    MultiformatMessageStringFromJSON,
    MultiformatMessageStringFromJSONTyped,
    MultiformatMessageStringToJSON,
} from './MultiformatMessageString';

/**
 * Represents the contents of an artifact.
 * @export
 * @interface ArtifactContent
 */
export interface ArtifactContent {
    /**
     * UTF-8-encoded content from a text artifact.
     * @type {string}
     * @memberof ArtifactContent
     */
    text?: string;
    /**
     * MIME Base64-encoded content from a binary artifact, or from a text artifact in its original encoding.
     * @type {string}
     * @memberof ArtifactContent
     */
    binary?: string;
    /**
     * 
     * @type {MultiformatMessageString}
     * @memberof ArtifactContent
     */
    rendered?: MultiformatMessageString;
    /**
     * 
     * @type {PropertyBag}
     * @memberof ArtifactContent
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the ArtifactContent interface.
 */
export function instanceOfArtifactContent(value: object): value is ArtifactContent {
    return true;
}

export function ArtifactContentFromJSON(json: any): ArtifactContent {
    return ArtifactContentFromJSONTyped(json, false);
}

export function ArtifactContentFromJSONTyped(json: any, ignoreDiscriminator: boolean): ArtifactContent {
    if (json == null) {
        return json;
    }
    return {
        
        'text': json['text'] == null ? undefined : json['text'],
        'binary': json['binary'] == null ? undefined : json['binary'],
        'rendered': json['rendered'] == null ? undefined : MultiformatMessageStringFromJSON(json['rendered']),
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function ArtifactContentToJSON(value?: ArtifactContent | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'text': value['text'],
        'binary': value['binary'],
        'rendered': MultiformatMessageStringToJSON(value['rendered']),
        'properties': PropertyBagToJSON(value['properties']),
    };
}


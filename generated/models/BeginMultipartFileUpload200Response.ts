/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BeginMultipartFileUpload200ResponsePartsInner } from './BeginMultipartFileUpload200ResponsePartsInner';
import {
    BeginMultipartFileUpload200ResponsePartsInnerFromJSON,
    BeginMultipartFileUpload200ResponsePartsInnerFromJSONTyped,
    BeginMultipartFileUpload200ResponsePartsInnerToJSON,
} from './BeginMultipartFileUpload200ResponsePartsInner';

/**
 * 
 * @export
 * @interface BeginMultipartFileUpload200Response
 */
export interface BeginMultipartFileUpload200Response {
    /**
     * UploadId for the current file
     * @type {string}
     * @memberof BeginMultipartFileUpload200Response
     */
    uploadId: string;
    /**
     * 
     * @type {Array<BeginMultipartFileUpload200ResponsePartsInner>}
     * @memberof BeginMultipartFileUpload200Response
     */
    parts: Array<BeginMultipartFileUpload200ResponsePartsInner>;
}

/**
 * Check if a given object implements the BeginMultipartFileUpload200Response interface.
 */
export function instanceOfBeginMultipartFileUpload200Response(value: object): value is BeginMultipartFileUpload200Response {
    if (!('uploadId' in value) || value['uploadId'] === undefined) return false;
    if (!('parts' in value) || value['parts'] === undefined) return false;
    return true;
}

export function BeginMultipartFileUpload200ResponseFromJSON(json: any): BeginMultipartFileUpload200Response {
    return BeginMultipartFileUpload200ResponseFromJSONTyped(json, false);
}

export function BeginMultipartFileUpload200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): BeginMultipartFileUpload200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'uploadId': json['upload_id'],
        'parts': ((json['parts'] as Array<any>).map(BeginMultipartFileUpload200ResponsePartsInnerFromJSON)),
    };
}

export function BeginMultipartFileUpload200ResponseToJSON(value?: BeginMultipartFileUpload200Response | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'upload_id': value['uploadId'],
        'parts': ((value['parts'] as Array<any>).map(BeginMultipartFileUpload200ResponsePartsInnerToJSON)),
    };
}


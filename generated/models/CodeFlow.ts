/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ThreadFlow } from './ThreadFlow';
import {
    ThreadFlowFromJSON,
    ThreadFlowFromJSONTyped,
    ThreadFlowToJSON,
} from './ThreadFlow';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';

/**
 * A set of threadFlows which together describe a pattern of code execution relevant to detecting a result.
 * @export
 * @interface CodeFlow
 */
export interface CodeFlow {
    /**
     * 
     * @type {Message}
     * @memberof CodeFlow
     */
    message?: Message;
    /**
     * An array of one or more unique threadFlow objects, each of which describes the progress of a program through a thread of execution.
     * @type {Array<ThreadFlow>}
     * @memberof CodeFlow
     */
    threadFlows: Array<ThreadFlow>;
    /**
     * 
     * @type {PropertyBag}
     * @memberof CodeFlow
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the CodeFlow interface.
 */
export function instanceOfCodeFlow(value: object): value is CodeFlow {
    if (!('threadFlows' in value) || value['threadFlows'] === undefined) return false;
    return true;
}

export function CodeFlowFromJSON(json: any): CodeFlow {
    return CodeFlowFromJSONTyped(json, false);
}

export function CodeFlowFromJSONTyped(json: any, ignoreDiscriminator: boolean): CodeFlow {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'] == null ? undefined : MessageFromJSON(json['message']),
        'threadFlows': ((json['threadFlows'] as Array<any>).map(ThreadFlowFromJSON)),
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function CodeFlowToJSON(value?: CodeFlow | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'message': MessageToJSON(value['message']),
        'threadFlows': ((value['threadFlows'] as Array<any>).map(ThreadFlowToJSON)),
        'properties': PropertyBagToJSON(value['properties']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FileDetailsV3 } from './FileDetailsV3';
import {
    FileDetailsV3FromJSON,
    FileDetailsV3FromJSONTyped,
    FileDetailsV3ToJSON,
} from './FileDetailsV3';
import type { ScanDetectionV3 } from './ScanDetectionV3';
import {
    ScanDetectionV3FromJSON,
    ScanDetectionV3FromJSONTyped,
    ScanDetectionV3ToJSON,
} from './ScanDetectionV3';

/**
 * 
 * @export
 * @interface FileResultsInner
 */
export interface FileResultsInner {
    /**
     * unique ID of the file
     * @type {string}
     * @memberof FileResultsInner
     */
    fileInstanceId: string;
    /**
     * full file path
     * @type {string}
     * @memberof FileResultsInner
     */
    fileLocation: string;
    /**
     * time the scan started
     * @type {Date}
     * @memberof FileResultsInner
     */
    startTime: Date;
    /**
     * time the scan ended
     * @type {Date}
     * @memberof FileResultsInner
     */
    endTime: Date;
    /**
     * 
     * @type {FileDetailsV3}
     * @memberof FileResultsInner
     */
    details: FileDetailsV3;
    /**
     * status of the scan
     * @type {string}
     * @memberof FileResultsInner
     */
    status: FileResultsInnerStatusEnum;
    /**
     * time the scan was seen at
     * @type {Date}
     * @memberof FileResultsInner
     */
    seen: Date;
    /**
     * 
     * @type {Array<ScanDetectionV3>}
     * @memberof FileResultsInner
     */
    detections?: Array<ScanDetectionV3>;
}


/**
 * @export
 */
export const FileResultsInnerStatusEnum = {
    Skipped: 'skipped',
    Pending: 'pending',
    Running: 'running',
    Done: 'done',
    Failed: 'failed',
    Canceled: 'canceled',
    UnknownDefaultOpenApi: '11184809'
} as const;
export type FileResultsInnerStatusEnum = typeof FileResultsInnerStatusEnum[keyof typeof FileResultsInnerStatusEnum];


/**
 * Check if a given object implements the FileResultsInner interface.
 */
export function instanceOfFileResultsInner(value: object): value is FileResultsInner {
    if (!('fileInstanceId' in value) || value['fileInstanceId'] === undefined) return false;
    if (!('fileLocation' in value) || value['fileLocation'] === undefined) return false;
    if (!('startTime' in value) || value['startTime'] === undefined) return false;
    if (!('endTime' in value) || value['endTime'] === undefined) return false;
    if (!('details' in value) || value['details'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('seen' in value) || value['seen'] === undefined) return false;
    return true;
}

export function FileResultsInnerFromJSON(json: any): FileResultsInner {
    return FileResultsInnerFromJSONTyped(json, false);
}

export function FileResultsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileResultsInner {
    if (json == null) {
        return json;
    }
    return {
        
        'fileInstanceId': json['file_instance_id'],
        'fileLocation': json['file_location'],
        'startTime': (new Date(json['start_time'])),
        'endTime': (new Date(json['end_time'])),
        'details': FileDetailsV3FromJSON(json['details']),
        'status': json['status'],
        'seen': (new Date(json['seen'])),
        'detections': json['detections'] == null ? undefined : ((json['detections'] as Array<any>).map(ScanDetectionV3FromJSON)),
    };
}

export function FileResultsInnerToJSON(value?: FileResultsInner | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'file_instance_id': value['fileInstanceId'],
        'file_location': value['fileLocation'],
        'start_time': ((value['startTime']).toISOString()),
        'end_time': ((value['endTime']).toISOString()),
        'details': FileDetailsV3ToJSON(value['details']),
        'status': value['status'],
        'seen': ((value['seen']).toISOString()),
        'detections': value['detections'] == null ? undefined : ((value['detections'] as Array<any>).map(ScanDetectionV3ToJSON)),
    };
}


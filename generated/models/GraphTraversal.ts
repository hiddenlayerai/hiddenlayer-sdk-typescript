/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';
import type { EdgeTraversal } from './EdgeTraversal';
import {
    EdgeTraversalFromJSON,
    EdgeTraversalFromJSONTyped,
    EdgeTraversalToJSON,
} from './EdgeTraversal';
import type { MultiformatMessageString } from './MultiformatMessageString';
import {
    MultiformatMessageStringFromJSON,
    MultiformatMessageStringFromJSONTyped,
    MultiformatMessageStringToJSON,
} from './MultiformatMessageString';

/**
 * Represents a path through a graph.
 * @export
 * @interface GraphTraversal
 */
export interface GraphTraversal {
    /**
     * The index within the run.graphs to be associated with the result.
     * @type {number}
     * @memberof GraphTraversal
     */
    runGraphIndex?: number;
    /**
     * The index within the result.graphs to be associated with the result.
     * @type {number}
     * @memberof GraphTraversal
     */
    resultGraphIndex?: number;
    /**
     * 
     * @type {Message}
     * @memberof GraphTraversal
     */
    description?: Message;
    /**
     * Values of relevant expressions at the start of the graph traversal that may change during graph traversal.
     * @type {{ [key: string]: MultiformatMessageString; }}
     * @memberof GraphTraversal
     */
    initialState?: { [key: string]: MultiformatMessageString; };
    /**
     * Values of relevant expressions at the start of the graph traversal that remain constant for the graph traversal.
     * @type {{ [key: string]: MultiformatMessageString; }}
     * @memberof GraphTraversal
     */
    immutableState?: { [key: string]: MultiformatMessageString; };
    /**
     * The sequences of edges traversed by this graph traversal.
     * @type {Array<EdgeTraversal>}
     * @memberof GraphTraversal
     */
    edgeTraversals?: Array<EdgeTraversal>;
    /**
     * 
     * @type {PropertyBag}
     * @memberof GraphTraversal
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the GraphTraversal interface.
 */
export function instanceOfGraphTraversal(value: object): value is GraphTraversal {
    return true;
}

export function GraphTraversalFromJSON(json: any): GraphTraversal {
    return GraphTraversalFromJSONTyped(json, false);
}

export function GraphTraversalFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphTraversal {
    if (json == null) {
        return json;
    }
    return {
        
        'runGraphIndex': json['runGraphIndex'] == null ? undefined : json['runGraphIndex'],
        'resultGraphIndex': json['resultGraphIndex'] == null ? undefined : json['resultGraphIndex'],
        'description': json['description'] == null ? undefined : MessageFromJSON(json['description']),
        'initialState': json['initialState'] == null ? undefined : (mapValues(json['initialState'], MultiformatMessageStringFromJSON)),
        'immutableState': json['immutableState'] == null ? undefined : (mapValues(json['immutableState'], MultiformatMessageStringFromJSON)),
        'edgeTraversals': json['edgeTraversals'] == null ? undefined : ((json['edgeTraversals'] as Array<any>).map(EdgeTraversalFromJSON)),
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function GraphTraversalToJSON(value?: GraphTraversal | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'runGraphIndex': value['runGraphIndex'],
        'resultGraphIndex': value['resultGraphIndex'],
        'description': MessageToJSON(value['description']),
        'initialState': value['initialState'] == null ? undefined : (mapValues(value['initialState'], MultiformatMessageStringToJSON)),
        'immutableState': value['immutableState'] == null ? undefined : (mapValues(value['immutableState'], MultiformatMessageStringToJSON)),
        'edgeTraversals': value['edgeTraversals'] == null ? undefined : ((value['edgeTraversals'] as Array<any>).map(EdgeTraversalToJSON)),
        'properties': PropertyBagToJSON(value['properties']),
    };
}


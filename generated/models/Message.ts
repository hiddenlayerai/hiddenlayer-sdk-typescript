/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';

/**
 * Encapsulates a message intended to be read by the end user.
 * @export
 * @interface Message
 */
export interface Message {
    /**
     * A plain text message string.
     * @type {string}
     * @memberof Message
     */
    text?: string;
    /**
     * A Markdown message string.
     * @type {string}
     * @memberof Message
     */
    markdown?: string;
    /**
     * The identifier for this message.
     * @type {string}
     * @memberof Message
     */
    id?: string;
    /**
     * An array of strings to substitute into the message string.
     * @type {Array<string>}
     * @memberof Message
     */
    arguments?: Array<string>;
    /**
     * 
     * @type {PropertyBag}
     * @memberof Message
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the Message interface.
 */
export function instanceOfMessage(value: object): value is Message {
    return true;
}

export function MessageFromJSON(json: any): Message {
    return MessageFromJSONTyped(json, false);
}

export function MessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Message {
    if (json == null) {
        return json;
    }
    return {
        
        'text': json['text'] == null ? undefined : json['text'],
        'markdown': json['markdown'] == null ? undefined : json['markdown'],
        'id': json['id'] == null ? undefined : json['id'],
        'arguments': json['arguments'] == null ? undefined : json['arguments'],
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function MessageToJSON(value?: Message | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'text': value['text'],
        'markdown': value['markdown'],
        'id': value['id'],
        'arguments': value['arguments'],
        'properties': PropertyBagToJSON(value['properties']),
    };
}


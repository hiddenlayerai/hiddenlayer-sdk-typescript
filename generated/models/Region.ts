/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ArtifactContent } from './ArtifactContent';
import {
    ArtifactContentFromJSON,
    ArtifactContentFromJSONTyped,
    ArtifactContentToJSON,
} from './ArtifactContent';
import type { Message } from './Message';
import {
    MessageFromJSON,
    MessageFromJSONTyped,
    MessageToJSON,
} from './Message';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';

/**
 * A region within an artifact where a result was detected.
 * @export
 * @interface Region
 */
export interface Region {
    /**
     * The line number of the first character in the region.
     * @type {number}
     * @memberof Region
     */
    startLine?: number;
    /**
     * The column number of the first character in the region.
     * @type {number}
     * @memberof Region
     */
    startColumn?: number;
    /**
     * The line number of the last character in the region.
     * @type {number}
     * @memberof Region
     */
    endLine?: number;
    /**
     * The column number of the character following the end of the region.
     * @type {number}
     * @memberof Region
     */
    endColumn?: number;
    /**
     * The zero-based offset from the beginning of the artifact of the first character in the region.
     * @type {number}
     * @memberof Region
     */
    charOffset?: number;
    /**
     * The length of the region in characters.
     * @type {number}
     * @memberof Region
     */
    charLength?: number;
    /**
     * The zero-based offset from the beginning of the artifact of the first byte in the region.
     * @type {number}
     * @memberof Region
     */
    byteOffset?: number;
    /**
     * The length of the region in bytes.
     * @type {number}
     * @memberof Region
     */
    byteLength?: number;
    /**
     * 
     * @type {ArtifactContent}
     * @memberof Region
     */
    snippet?: ArtifactContent;
    /**
     * 
     * @type {Message}
     * @memberof Region
     */
    message?: Message;
    /**
     * Specifies the source language, if any, of the portion of the artifact specified by the region object.
     * @type {string}
     * @memberof Region
     */
    sourceLanguage?: string;
    /**
     * 
     * @type {PropertyBag}
     * @memberof Region
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the Region interface.
 */
export function instanceOfRegion(value: object): value is Region {
    return true;
}

export function RegionFromJSON(json: any): Region {
    return RegionFromJSONTyped(json, false);
}

export function RegionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Region {
    if (json == null) {
        return json;
    }
    return {
        
        'startLine': json['startLine'] == null ? undefined : json['startLine'],
        'startColumn': json['startColumn'] == null ? undefined : json['startColumn'],
        'endLine': json['endLine'] == null ? undefined : json['endLine'],
        'endColumn': json['endColumn'] == null ? undefined : json['endColumn'],
        'charOffset': json['charOffset'] == null ? undefined : json['charOffset'],
        'charLength': json['charLength'] == null ? undefined : json['charLength'],
        'byteOffset': json['byteOffset'] == null ? undefined : json['byteOffset'],
        'byteLength': json['byteLength'] == null ? undefined : json['byteLength'],
        'snippet': json['snippet'] == null ? undefined : ArtifactContentFromJSON(json['snippet']),
        'message': json['message'] == null ? undefined : MessageFromJSON(json['message']),
        'sourceLanguage': json['sourceLanguage'] == null ? undefined : json['sourceLanguage'],
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function RegionToJSON(value?: Region | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'startLine': value['startLine'],
        'startColumn': value['startColumn'],
        'endLine': value['endLine'],
        'endColumn': value['endColumn'],
        'charOffset': value['charOffset'],
        'charLength': value['charLength'],
        'byteOffset': value['byteOffset'],
        'byteLength': value['byteLength'],
        'snippet': ArtifactContentToJSON(value['snippet']),
        'message': MessageToJSON(value['message']),
        'sourceLanguage': value['sourceLanguage'],
        'properties': PropertyBagToJSON(value['properties']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Sensor } from './Sensor';
import {
    SensorFromJSON,
    SensorFromJSONTyped,
    SensorToJSON,
} from './Sensor';

/**
 * 
 * @export
 * @interface SensorQueryResponse
 */
export interface SensorQueryResponse {
    /**
     * 
     * @type {number}
     * @memberof SensorQueryResponse
     */
    totalCount: number;
    /**
     * 
     * @type {number}
     * @memberof SensorQueryResponse
     */
    pageSize: number;
    /**
     * 
     * @type {number}
     * @memberof SensorQueryResponse
     */
    pageNumber: number;
    /**
     * 
     * @type {Array<Sensor>}
     * @memberof SensorQueryResponse
     */
    results: Array<Sensor>;
}

/**
 * Check if a given object implements the SensorQueryResponse interface.
 */
export function instanceOfSensorQueryResponse(value: object): value is SensorQueryResponse {
    if (!('totalCount' in value) || value['totalCount'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('pageNumber' in value) || value['pageNumber'] === undefined) return false;
    if (!('results' in value) || value['results'] === undefined) return false;
    return true;
}

export function SensorQueryResponseFromJSON(json: any): SensorQueryResponse {
    return SensorQueryResponseFromJSONTyped(json, false);
}

export function SensorQueryResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SensorQueryResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalCount': json['total_count'],
        'pageSize': json['page_size'],
        'pageNumber': json['page_number'],
        'results': ((json['results'] as Array<any>).map(SensorFromJSON)),
    };
}

export function SensorQueryResponseToJSON(value?: SensorQueryResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'total_count': value['totalCount'],
        'page_size': value['pageSize'],
        'page_number': value['pageNumber'],
        'results': ((value['results'] as Array<any>).map(SensorToJSON)),
    };
}


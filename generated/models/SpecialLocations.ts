/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';
import type { ArtifactLocation } from './ArtifactLocation';
import {
    ArtifactLocationFromJSON,
    ArtifactLocationFromJSONTyped,
    ArtifactLocationToJSON,
} from './ArtifactLocation';

/**
 * Defines locations of special significance to SARIF consumers.
 * @export
 * @interface SpecialLocations
 */
export interface SpecialLocations {
    /**
     * 
     * @type {ArtifactLocation}
     * @memberof SpecialLocations
     */
    displayBase?: ArtifactLocation;
    /**
     * 
     * @type {PropertyBag}
     * @memberof SpecialLocations
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the SpecialLocations interface.
 */
export function instanceOfSpecialLocations(value: object): value is SpecialLocations {
    return true;
}

export function SpecialLocationsFromJSON(json: any): SpecialLocations {
    return SpecialLocationsFromJSONTyped(json, false);
}

export function SpecialLocationsFromJSONTyped(json: any, ignoreDiscriminator: boolean): SpecialLocations {
    if (json == null) {
        return json;
    }
    return {
        
        'displayBase': json['displayBase'] == null ? undefined : ArtifactLocationFromJSON(json['displayBase']),
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function SpecialLocationsToJSON(value?: SpecialLocations | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'displayBase': ArtifactLocationToJSON(value['displayBase']),
        'properties': PropertyBagToJSON(value['properties']),
    };
}


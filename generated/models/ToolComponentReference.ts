/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';

/**
 * Identifies a particular toolComponent object, either the driver or an extension.
 * @export
 * @interface ToolComponentReference
 */
export interface ToolComponentReference {
    /**
     * The 'name' property of the referenced toolComponent.
     * @type {string}
     * @memberof ToolComponentReference
     */
    name?: string;
    /**
     * An index into the referenced toolComponent in tool.extensions.
     * @type {number}
     * @memberof ToolComponentReference
     */
    index?: number;
    /**
     * The 'guid' property of the referenced toolComponent.
     * @type {string}
     * @memberof ToolComponentReference
     */
    guid?: string;
    /**
     * 
     * @type {PropertyBag}
     * @memberof ToolComponentReference
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the ToolComponentReference interface.
 */
export function instanceOfToolComponentReference(value: object): value is ToolComponentReference {
    return true;
}

export function ToolComponentReferenceFromJSON(json: any): ToolComponentReference {
    return ToolComponentReferenceFromJSONTyped(json, false);
}

export function ToolComponentReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): ToolComponentReference {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'index': json['index'] == null ? undefined : json['index'],
        'guid': json['guid'] == null ? undefined : json['guid'],
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function ToolComponentReferenceToJSON(value?: ToolComponentReference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'index': value['index'],
        'guid': value['guid'],
        'properties': PropertyBagToJSON(value['properties']),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';
import type { MultiformatMessageString } from './MultiformatMessageString';
import {
    MultiformatMessageStringFromJSON,
    MultiformatMessageStringFromJSONTyped,
    MultiformatMessageStringToJSON,
} from './MultiformatMessageString';

/**
 * Provides additional metadata related to translation.
 * @export
 * @interface TranslationMetadata
 */
export interface TranslationMetadata {
    /**
     * The name associated with the translation metadata.
     * @type {string}
     * @memberof TranslationMetadata
     */
    name: string;
    /**
     * The full name associated with the translation metadata.
     * @type {string}
     * @memberof TranslationMetadata
     */
    fullName?: string;
    /**
     * 
     * @type {MultiformatMessageString}
     * @memberof TranslationMetadata
     */
    shortDescription?: MultiformatMessageString;
    /**
     * 
     * @type {MultiformatMessageString}
     * @memberof TranslationMetadata
     */
    fullDescription?: MultiformatMessageString;
    /**
     * The absolute URI from which the translation metadata can be downloaded.
     * @type {string}
     * @memberof TranslationMetadata
     */
    downloadUri?: string;
    /**
     * The absolute URI from which information related to the translation metadata can be downloaded.
     * @type {string}
     * @memberof TranslationMetadata
     */
    informationUri?: string;
    /**
     * 
     * @type {PropertyBag}
     * @memberof TranslationMetadata
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the TranslationMetadata interface.
 */
export function instanceOfTranslationMetadata(value: object): value is TranslationMetadata {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function TranslationMetadataFromJSON(json: any): TranslationMetadata {
    return TranslationMetadataFromJSONTyped(json, false);
}

export function TranslationMetadataFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationMetadata {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'shortDescription': json['shortDescription'] == null ? undefined : MultiformatMessageStringFromJSON(json['shortDescription']),
        'fullDescription': json['fullDescription'] == null ? undefined : MultiformatMessageStringFromJSON(json['fullDescription']),
        'downloadUri': json['downloadUri'] == null ? undefined : json['downloadUri'],
        'informationUri': json['informationUri'] == null ? undefined : json['informationUri'],
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function TranslationMetadataToJSON(value?: TranslationMetadata | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'fullName': value['fullName'],
        'shortDescription': MultiformatMessageStringToJSON(value['shortDescription']),
        'fullDescription': MultiformatMessageStringToJSON(value['fullDescription']),
        'downloadUri': value['downloadUri'],
        'informationUri': value['informationUri'],
        'properties': PropertyBagToJSON(value['properties']),
    };
}


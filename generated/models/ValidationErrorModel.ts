/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer ModelScan V2
 * HiddenLayer ModelScan API for scanning of models
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LocationInner } from './LocationInner';
import {
    LocationInnerFromJSON,
    LocationInnerFromJSONTyped,
    LocationInnerToJSON,
} from './LocationInner';

/**
 * 
 * @export
 * @interface ValidationErrorModel
 */
export interface ValidationErrorModel {
    /**
     * 
     * @type {Array<LocationInner>}
     * @memberof ValidationErrorModel
     */
    loc: Array<LocationInner>;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorModel
     */
    msg: string;
    /**
     * 
     * @type {string}
     * @memberof ValidationErrorModel
     */
    type: string;
}

/**
 * Check if a given object implements the ValidationErrorModel interface.
 */
export function instanceOfValidationErrorModel(value: object): value is ValidationErrorModel {
    if (!('loc' in value) || value['loc'] === undefined) return false;
    if (!('msg' in value) || value['msg'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ValidationErrorModelFromJSON(json: any): ValidationErrorModel {
    return ValidationErrorModelFromJSONTyped(json, false);
}

export function ValidationErrorModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationErrorModel {
    if (json == null) {
        return json;
    }
    return {
        
        'loc': ((json['loc'] as Array<any>).map(LocationInnerFromJSON)),
        'msg': json['msg'],
        'type': json['type'],
    };
}

export function ValidationErrorModelToJSON(value?: ValidationErrorModel | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'loc': ((value['loc'] as Array<any>).map(LocationInnerToJSON)),
        'msg': value['msg'],
        'type': value['type'],
    };
}


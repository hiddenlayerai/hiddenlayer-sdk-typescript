/* tslint:disable */
/* eslint-disable */
/**
 * HiddenLayer-API
 * HiddenLayer-API
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyBag } from './PropertyBag';
import {
    PropertyBagFromJSON,
    PropertyBagFromJSONTyped,
    PropertyBagToJSON,
} from './PropertyBag';
import type { ArtifactLocation } from './ArtifactLocation';
import {
    ArtifactLocationFromJSON,
    ArtifactLocationFromJSONTyped,
    ArtifactLocationToJSON,
} from './ArtifactLocation';

/**
 * Specifies the information necessary to retrieve a desired revision from a version control system.
 * @export
 * @interface VersionControlDetails
 */
export interface VersionControlDetails {
    /**
     * The absolute URI of the repository.
     * @type {string}
     * @memberof VersionControlDetails
     */
    repositoryUri: string;
    /**
     * A string that uniquely and permanently identifies the revision within the repository.
     * @type {string}
     * @memberof VersionControlDetails
     */
    revisionId?: string;
    /**
     * The name of a branch containing the revision.
     * @type {string}
     * @memberof VersionControlDetails
     */
    branch?: string;
    /**
     * A tag that has been applied to the revision.
     * @type {string}
     * @memberof VersionControlDetails
     */
    revisionTag?: string;
    /**
     * A Coordinated Universal Time (UTC) date and time that can be used to synchronize an enlistment to the state of the repository at that time.
     * @type {Date}
     * @memberof VersionControlDetails
     */
    asOfTimeUtc?: Date;
    /**
     * 
     * @type {ArtifactLocation}
     * @memberof VersionControlDetails
     */
    mappedTo?: ArtifactLocation;
    /**
     * 
     * @type {PropertyBag}
     * @memberof VersionControlDetails
     */
    properties?: PropertyBag;
}

/**
 * Check if a given object implements the VersionControlDetails interface.
 */
export function instanceOfVersionControlDetails(value: object): value is VersionControlDetails {
    if (!('repositoryUri' in value) || value['repositoryUri'] === undefined) return false;
    return true;
}

export function VersionControlDetailsFromJSON(json: any): VersionControlDetails {
    return VersionControlDetailsFromJSONTyped(json, false);
}

export function VersionControlDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionControlDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'repositoryUri': json['repositoryUri'],
        'revisionId': json['revisionId'] == null ? undefined : json['revisionId'],
        'branch': json['branch'] == null ? undefined : json['branch'],
        'revisionTag': json['revisionTag'] == null ? undefined : json['revisionTag'],
        'asOfTimeUtc': json['asOfTimeUtc'] == null ? undefined : (new Date(json['asOfTimeUtc'])),
        'mappedTo': json['mappedTo'] == null ? undefined : ArtifactLocationFromJSON(json['mappedTo']),
        'properties': json['properties'] == null ? undefined : PropertyBagFromJSON(json['properties']),
    };
}

export function VersionControlDetailsToJSON(value?: VersionControlDetails | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'repositoryUri': value['repositoryUri'],
        'revisionId': value['revisionId'],
        'branch': value['branch'],
        'revisionTag': value['revisionTag'],
        'asOfTimeUtc': value['asOfTimeUtc'] == null ? undefined : ((value['asOfTimeUtc']).toISOString()),
        'mappedTo': ArtifactLocationToJSON(value['mappedTo']),
        'properties': PropertyBagToJSON(value['properties']),
    };
}

